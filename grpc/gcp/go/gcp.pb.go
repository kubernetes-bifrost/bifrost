// MIT License
//
// Copyright (c) 2025 kubernetes-bifrost
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: gcp.proto

package gcppb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetContainerRegistryLoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenRequest  *GetTokenRequest       `protobuf:"bytes,1,opt,name=token_request,json=tokenRequest,proto3" json:"token_request,omitempty"`
	Registry      string                 `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerRegistryLoginRequest) Reset() {
	*x = GetContainerRegistryLoginRequest{}
	mi := &file_gcp_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerRegistryLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerRegistryLoginRequest) ProtoMessage() {}

func (x *GetContainerRegistryLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcp_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerRegistryLoginRequest.ProtoReflect.Descriptor instead.
func (*GetContainerRegistryLoginRequest) Descriptor() ([]byte, []int) {
	return file_gcp_proto_rawDescGZIP(), []int{0}
}

func (x *GetContainerRegistryLoginRequest) GetTokenRequest() *GetTokenRequest {
	if x != nil {
		return x.TokenRequest
	}
	return nil
}

func (x *GetContainerRegistryLoginRequest) GetRegistry() string {
	if x != nil {
		return x.Registry
	}
	return ""
}

type ContainerRegistryLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerRegistryLogin) Reset() {
	*x = ContainerRegistryLogin{}
	mi := &file_gcp_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerRegistryLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRegistryLogin) ProtoMessage() {}

func (x *ContainerRegistryLogin) ProtoReflect() protoreflect.Message {
	mi := &file_gcp_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRegistryLogin.ProtoReflect.Descriptor instead.
func (*ContainerRegistryLogin) Descriptor() ([]byte, []int) {
	return file_gcp_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerRegistryLogin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContainerRegistryLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ContainerRegistryLogin) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type GetTokenRequest struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	WorkloadIdentityProvider string                 `protobuf:"bytes,1,opt,name=workloadIdentityProvider,proto3" json:"workloadIdentityProvider,omitempty"`
	ServiceAccountEmail      string                 `protobuf:"bytes,2,opt,name=serviceAccountEmail,proto3" json:"serviceAccountEmail,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GetTokenRequest) Reset() {
	*x = GetTokenRequest{}
	mi := &file_gcp_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRequest) ProtoMessage() {}

func (x *GetTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gcp_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRequest.ProtoReflect.Descriptor instead.
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return file_gcp_proto_rawDescGZIP(), []int{2}
}

func (x *GetTokenRequest) GetWorkloadIdentityProvider() string {
	if x != nil {
		return x.WorkloadIdentityProvider
	}
	return ""
}

func (x *GetTokenRequest) GetServiceAccountEmail() string {
	if x != nil {
		return x.ServiceAccountEmail
	}
	return ""
}

type GetTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType     string                 `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Expiry        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,5,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	mi := &file_gcp_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gcp_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_gcp_proto_rawDescGZIP(), []int{3}
}

func (x *GetTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GetTokenResponse) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *GetTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *GetTokenResponse) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *GetTokenResponse) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

var File_gcp_proto protoreflect.FileDescriptor

const file_gcp_proto_rawDesc = "" +
	"\n" +
	"\tgcp.proto\x12\x06gcp.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"|\n" +
	" GetContainerRegistryLoginRequest\x12<\n" +
	"\rtoken_request\x18\x01 \x01(\v2\x17.gcp.v1.GetTokenRequestR\ftokenRequest\x12\x1a\n" +
	"\bregistry\x18\x02 \x01(\tR\bregistry\"\x8b\x01\n" +
	"\x16ContainerRegistryLogin\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x7f\n" +
	"\x0fGetTokenRequest\x12:\n" +
	"\x18workloadIdentityProvider\x18\x01 \x01(\tR\x18workloadIdentityProvider\x120\n" +
	"\x13serviceAccountEmail\x18\x02 \x01(\tR\x13serviceAccountEmail\"\xcc\x01\n" +
	"\x10GetTokenResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"token_type\x18\x02 \x01(\tR\ttokenType\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x122\n" +
	"\x06expiry\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiry\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x05 \x01(\x03R\texpiresIn2\xe0\x01\n" +
	"\aBifrost\x12T\n" +
	"\bGetToken\x12\x17.gcp.v1.GetTokenRequest\x1a\x18.gcp.v1.GetTokenResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/v1/gcp/token\x12\x7f\n" +
	"\x19GetContainerRegistryLogin\x12(.gcp.v1.GetContainerRegistryLoginRequest\x1a\x1e.gcp.v1.ContainerRegistryLogin\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/gcp/registryB6Z4github.com/kubernetes-bifrost/bifrost/grpc/gcp;gcppbb\x06proto3"

var (
	file_gcp_proto_rawDescOnce sync.Once
	file_gcp_proto_rawDescData []byte
)

func file_gcp_proto_rawDescGZIP() []byte {
	file_gcp_proto_rawDescOnce.Do(func() {
		file_gcp_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gcp_proto_rawDesc), len(file_gcp_proto_rawDesc)))
	})
	return file_gcp_proto_rawDescData
}

var file_gcp_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_gcp_proto_goTypes = []any{
	(*GetContainerRegistryLoginRequest)(nil), // 0: gcp.v1.GetContainerRegistryLoginRequest
	(*ContainerRegistryLogin)(nil),           // 1: gcp.v1.ContainerRegistryLogin
	(*GetTokenRequest)(nil),                  // 2: gcp.v1.GetTokenRequest
	(*GetTokenResponse)(nil),                 // 3: gcp.v1.GetTokenResponse
	(*timestamppb.Timestamp)(nil),            // 4: google.protobuf.Timestamp
}
var file_gcp_proto_depIdxs = []int32{
	2, // 0: gcp.v1.GetContainerRegistryLoginRequest.token_request:type_name -> gcp.v1.GetTokenRequest
	4, // 1: gcp.v1.ContainerRegistryLogin.expires_at:type_name -> google.protobuf.Timestamp
	4, // 2: gcp.v1.GetTokenResponse.expiry:type_name -> google.protobuf.Timestamp
	2, // 3: gcp.v1.Bifrost.GetToken:input_type -> gcp.v1.GetTokenRequest
	0, // 4: gcp.v1.Bifrost.GetContainerRegistryLogin:input_type -> gcp.v1.GetContainerRegistryLoginRequest
	3, // 5: gcp.v1.Bifrost.GetToken:output_type -> gcp.v1.GetTokenResponse
	1, // 6: gcp.v1.Bifrost.GetContainerRegistryLogin:output_type -> gcp.v1.ContainerRegistryLogin
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_gcp_proto_init() }
func file_gcp_proto_init() {
	if File_gcp_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gcp_proto_rawDesc), len(file_gcp_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gcp_proto_goTypes,
		DependencyIndexes: file_gcp_proto_depIdxs,
		MessageInfos:      file_gcp_proto_msgTypes,
	}.Build()
	File_gcp_proto = out.File
	file_gcp_proto_goTypes = nil
	file_gcp_proto_depIdxs = nil
}
