// MIT License
//
// Copyright (c) 2025 kubernetes-bifrost
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: bifrost.proto

package bifr√∂stpb

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Provider int32

const (
	Provider_aws   Provider = 0
	Provider_azure Provider = 1
	Provider_gcp   Provider = 2
)

// Enum value maps for Provider.
var (
	Provider_name = map[int32]string{
		0: "aws",
		1: "azure",
		2: "gcp",
	}
	Provider_value = map[string]int32{
		"aws":   0,
		"azure": 1,
		"gcp":   2,
	}
)

func (x Provider) Enum() *Provider {
	p := new(Provider)
	*p = x
	return p
}

func (x Provider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Provider) Descriptor() protoreflect.EnumDescriptor {
	return file_bifrost_proto_enumTypes[0].Descriptor()
}

func (Provider) Type() protoreflect.EnumType {
	return &file_bifrost_proto_enumTypes[0]
}

func (x Provider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Provider.Descriptor instead.
func (Provider) EnumDescriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{0}
}

type ContainerRegistryLogin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerRegistryLogin) Reset() {
	*x = ContainerRegistryLogin{}
	mi := &file_bifrost_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerRegistryLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerRegistryLogin) ProtoMessage() {}

func (x *ContainerRegistryLogin) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerRegistryLogin.ProtoReflect.Descriptor instead.
func (*ContainerRegistryLogin) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{0}
}

func (x *ContainerRegistryLogin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContainerRegistryLogin) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ContainerRegistryLogin) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_bifrost_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{1}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_bifrost_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{2}
}

func (x *GetVersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetTokenRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Provider          Provider               `protobuf:"varint,1,opt,name=provider,proto3,enum=bifrost.v1.Provider" json:"provider,omitempty"`
	ContainerRegistry string                 `protobuf:"bytes,2,opt,name=container_registry,json=containerRegistry,proto3" json:"container_registry,omitempty"`
	// Types that are valid to be assigned to ProviderParams:
	//
	//	*GetTokenRequest_Aws
	//	*GetTokenRequest_Azure
	//	*GetTokenRequest_Gcp
	ProviderParams isGetTokenRequest_ProviderParams `protobuf_oneof:"provider_params"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTokenRequest) Reset() {
	*x = GetTokenRequest{}
	mi := &file_bifrost_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenRequest) ProtoMessage() {}

func (x *GetTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenRequest.ProtoReflect.Descriptor instead.
func (*GetTokenRequest) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{3}
}

func (x *GetTokenRequest) GetProvider() Provider {
	if x != nil {
		return x.Provider
	}
	return Provider_aws
}

func (x *GetTokenRequest) GetContainerRegistry() string {
	if x != nil {
		return x.ContainerRegistry
	}
	return ""
}

func (x *GetTokenRequest) GetProviderParams() isGetTokenRequest_ProviderParams {
	if x != nil {
		return x.ProviderParams
	}
	return nil
}

func (x *GetTokenRequest) GetAws() *AWSParams {
	if x != nil {
		if x, ok := x.ProviderParams.(*GetTokenRequest_Aws); ok {
			return x.Aws
		}
	}
	return nil
}

func (x *GetTokenRequest) GetAzure() *AzureParams {
	if x != nil {
		if x, ok := x.ProviderParams.(*GetTokenRequest_Azure); ok {
			return x.Azure
		}
	}
	return nil
}

func (x *GetTokenRequest) GetGcp() *GCPParams {
	if x != nil {
		if x, ok := x.ProviderParams.(*GetTokenRequest_Gcp); ok {
			return x.Gcp
		}
	}
	return nil
}

type isGetTokenRequest_ProviderParams interface {
	isGetTokenRequest_ProviderParams()
}

type GetTokenRequest_Aws struct {
	Aws *AWSParams `protobuf:"bytes,100,opt,name=aws,proto3,oneof"`
}

type GetTokenRequest_Azure struct {
	Azure *AzureParams `protobuf:"bytes,101,opt,name=azure,proto3,oneof"`
}

type GetTokenRequest_Gcp struct {
	Gcp *GCPParams `protobuf:"bytes,102,opt,name=gcp,proto3,oneof"`
}

func (*GetTokenRequest_Aws) isGetTokenRequest_ProviderParams() {}

func (*GetTokenRequest_Azure) isGetTokenRequest_ProviderParams() {}

func (*GetTokenRequest_Gcp) isGetTokenRequest_ProviderParams() {}

type GetTokenResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Token:
	//
	//	*GetTokenResponse_RegistryLogin
	//	*GetTokenResponse_Aws
	//	*GetTokenResponse_Azure
	//	*GetTokenResponse_Gcp
	Token         isGetTokenResponse_Token `protobuf_oneof:"token"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTokenResponse) Reset() {
	*x = GetTokenResponse{}
	mi := &file_bifrost_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenResponse) ProtoMessage() {}

func (x *GetTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenResponse.ProtoReflect.Descriptor instead.
func (*GetTokenResponse) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{4}
}

func (x *GetTokenResponse) GetToken() isGetTokenResponse_Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *GetTokenResponse) GetRegistryLogin() *ContainerRegistryLogin {
	if x != nil {
		if x, ok := x.Token.(*GetTokenResponse_RegistryLogin); ok {
			return x.RegistryLogin
		}
	}
	return nil
}

func (x *GetTokenResponse) GetAws() *AWSToken {
	if x != nil {
		if x, ok := x.Token.(*GetTokenResponse_Aws); ok {
			return x.Aws
		}
	}
	return nil
}

func (x *GetTokenResponse) GetAzure() *AzureToken {
	if x != nil {
		if x, ok := x.Token.(*GetTokenResponse_Azure); ok {
			return x.Azure
		}
	}
	return nil
}

func (x *GetTokenResponse) GetGcp() *GCPToken {
	if x != nil {
		if x, ok := x.Token.(*GetTokenResponse_Gcp); ok {
			return x.Gcp
		}
	}
	return nil
}

type isGetTokenResponse_Token interface {
	isGetTokenResponse_Token()
}

type GetTokenResponse_RegistryLogin struct {
	RegistryLogin *ContainerRegistryLogin `protobuf:"bytes,1,opt,name=registry_login,json=registryLogin,proto3,oneof"`
}

type GetTokenResponse_Aws struct {
	Aws *AWSToken `protobuf:"bytes,100,opt,name=aws,proto3,oneof"`
}

type GetTokenResponse_Azure struct {
	Azure *AzureToken `protobuf:"bytes,101,opt,name=azure,proto3,oneof"`
}

type GetTokenResponse_Gcp struct {
	Gcp *GCPToken `protobuf:"bytes,102,opt,name=gcp,proto3,oneof"`
}

func (*GetTokenResponse_RegistryLogin) isGetTokenResponse_Token() {}

func (*GetTokenResponse_Aws) isGetTokenResponse_Token() {}

func (*GetTokenResponse_Azure) isGetTokenResponse_Token() {}

func (*GetTokenResponse_Gcp) isGetTokenResponse_Token() {}

type AWSParams struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoleArn         string                 `protobuf:"bytes,1,opt,name=role_arn,json=roleArn,proto3" json:"role_arn,omitempty"`
	RoleSessionName string                 `protobuf:"bytes,2,opt,name=role_session_name,json=roleSessionName,proto3" json:"role_session_name,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AWSParams) Reset() {
	*x = AWSParams{}
	mi := &file_bifrost_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSParams) ProtoMessage() {}

func (x *AWSParams) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSParams.ProtoReflect.Descriptor instead.
func (*AWSParams) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{5}
}

func (x *AWSParams) GetRoleArn() string {
	if x != nil {
		return x.RoleArn
	}
	return ""
}

func (x *AWSParams) GetRoleSessionName() string {
	if x != nil {
		return x.RoleSessionName
	}
	return ""
}

type AWSToken struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AccessKeyId     string                 `protobuf:"bytes,1,opt,name=access_key_id,json=accessKeyId,proto3" json:"access_key_id,omitempty"`
	SecretAccessKey string                 `protobuf:"bytes,2,opt,name=secret_access_key,json=secretAccessKey,proto3" json:"secret_access_key,omitempty"`
	SessionToken    string                 `protobuf:"bytes,3,opt,name=session_token,json=sessionToken,proto3" json:"session_token,omitempty"`
	Expiration      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiration,proto3" json:"expiration,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AWSToken) Reset() {
	*x = AWSToken{}
	mi := &file_bifrost_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AWSToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AWSToken) ProtoMessage() {}

func (x *AWSToken) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AWSToken.ProtoReflect.Descriptor instead.
func (*AWSToken) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{6}
}

func (x *AWSToken) GetAccessKeyId() string {
	if x != nil {
		return x.AccessKeyId
	}
	return ""
}

func (x *AWSToken) GetSecretAccessKey() string {
	if x != nil {
		return x.SecretAccessKey
	}
	return ""
}

func (x *AWSToken) GetSessionToken() string {
	if x != nil {
		return x.SessionToken
	}
	return ""
}

func (x *AWSToken) GetExpiration() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiration
	}
	return nil
}

type AzureParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	Scopes        []string               `protobuf:"bytes,3,rep,name=scopes,proto3" json:"scopes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureParams) Reset() {
	*x = AzureParams{}
	mi := &file_bifrost_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureParams) ProtoMessage() {}

func (x *AzureParams) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureParams.ProtoReflect.Descriptor instead.
func (*AzureParams) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{7}
}

func (x *AzureParams) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AzureParams) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *AzureParams) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type AzureToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ExpiresOn     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_on,json=expiresOn,proto3" json:"expires_on,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AzureToken) Reset() {
	*x = AzureToken{}
	mi := &file_bifrost_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AzureToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureToken) ProtoMessage() {}

func (x *AzureToken) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureToken.ProtoReflect.Descriptor instead.
func (*AzureToken) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{8}
}

func (x *AzureToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AzureToken) GetExpiresOn() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresOn
	}
	return nil
}

type GCPParams struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	ServiceAccountEmail      string                 `protobuf:"bytes,1,opt,name=service_account_email,json=serviceAccountEmail,proto3" json:"service_account_email,omitempty"`
	WorkloadIdentityProvider string                 `protobuf:"bytes,2,opt,name=workload_identity_provider,json=workloadIdentityProvider,proto3" json:"workload_identity_provider,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *GCPParams) Reset() {
	*x = GCPParams{}
	mi := &file_bifrost_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GCPParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPParams) ProtoMessage() {}

func (x *GCPParams) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPParams.ProtoReflect.Descriptor instead.
func (*GCPParams) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{9}
}

func (x *GCPParams) GetServiceAccountEmail() string {
	if x != nil {
		return x.ServiceAccountEmail
	}
	return ""
}

func (x *GCPParams) GetWorkloadIdentityProvider() string {
	if x != nil {
		return x.WorkloadIdentityProvider
	}
	return ""
}

type GCPToken struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType     string                 `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken  string                 `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Expiry        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	ExpiresIn     int64                  `protobuf:"varint,5,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GCPToken) Reset() {
	*x = GCPToken{}
	mi := &file_bifrost_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GCPToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCPToken) ProtoMessage() {}

func (x *GCPToken) ProtoReflect() protoreflect.Message {
	mi := &file_bifrost_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCPToken.ProtoReflect.Descriptor instead.
func (*GCPToken) Descriptor() ([]byte, []int) {
	return file_bifrost_proto_rawDescGZIP(), []int{10}
}

func (x *GCPToken) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *GCPToken) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *GCPToken) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *GCPToken) GetExpiry() *timestamppb.Timestamp {
	if x != nil {
		return x.Expiry
	}
	return nil
}

func (x *GCPToken) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

var File_bifrost_proto protoreflect.FileDescriptor

const file_bifrost_proto_rawDesc = "" +
	"\n" +
	"\rbifrost.proto\x12\n" +
	"bifrost.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1cgoogle/api/annotations.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"\x8b\x01\n" +
	"\x16ContainerRegistryLogin\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\x13\n" +
	"\x11GetVersionRequest\".\n" +
	"\x12GetVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\"\x91\x02\n" +
	"\x0fGetTokenRequest\x125\n" +
	"\bprovider\x18\x01 \x01(\x0e2\x14.bifrost.v1.ProviderB\x03\xe0A\x02R\bprovider\x12-\n" +
	"\x12container_registry\x18\x02 \x01(\tR\x11containerRegistry\x12)\n" +
	"\x03aws\x18d \x01(\v2\x15.bifrost.v1.AWSParamsH\x00R\x03aws\x12/\n" +
	"\x05azure\x18e \x01(\v2\x17.bifrost.v1.AzureParamsH\x00R\x05azure\x12)\n" +
	"\x03gcp\x18f \x01(\v2\x15.bifrost.v1.GCPParamsH\x00R\x03gcpB\x11\n" +
	"\x0fprovider_params\"\xec\x01\n" +
	"\x10GetTokenResponse\x12K\n" +
	"\x0eregistry_login\x18\x01 \x01(\v2\".bifrost.v1.ContainerRegistryLoginH\x00R\rregistryLogin\x12(\n" +
	"\x03aws\x18d \x01(\v2\x14.bifrost.v1.AWSTokenH\x00R\x03aws\x12.\n" +
	"\x05azure\x18e \x01(\v2\x16.bifrost.v1.AzureTokenH\x00R\x05azure\x12(\n" +
	"\x03gcp\x18f \x01(\v2\x14.bifrost.v1.GCPTokenH\x00R\x03gcpB\a\n" +
	"\x05token\"R\n" +
	"\tAWSParams\x12\x19\n" +
	"\brole_arn\x18\x01 \x01(\tR\aroleArn\x12*\n" +
	"\x11role_session_name\x18\x02 \x01(\tR\x0froleSessionName\"\xbb\x01\n" +
	"\bAWSToken\x12\"\n" +
	"\raccess_key_id\x18\x01 \x01(\tR\vaccessKeyId\x12*\n" +
	"\x11secret_access_key\x18\x02 \x01(\tR\x0fsecretAccessKey\x12#\n" +
	"\rsession_token\x18\x03 \x01(\tR\fsessionToken\x12:\n" +
	"\n" +
	"expiration\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"expiration\"_\n" +
	"\vAzureParams\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12\x16\n" +
	"\x06scopes\x18\x03 \x03(\tR\x06scopes\"]\n" +
	"\n" +
	"AzureToken\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x129\n" +
	"\n" +
	"expires_on\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresOn\"}\n" +
	"\tGCPParams\x122\n" +
	"\x15service_account_email\x18\x01 \x01(\tR\x13serviceAccountEmail\x12<\n" +
	"\x1aworkload_identity_provider\x18\x02 \x01(\tR\x18workloadIdentityProvider\"\xc4\x01\n" +
	"\bGCPToken\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12\x1d\n" +
	"\n" +
	"token_type\x18\x02 \x01(\tR\ttokenType\x12#\n" +
	"\rrefresh_token\x18\x03 \x01(\tR\frefreshToken\x122\n" +
	"\x06expiry\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06expiry\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x05 \x01(\x03R\texpiresIn*'\n" +
	"\bProvider\x12\a\n" +
	"\x03aws\x10\x00\x12\t\n" +
	"\x05azure\x10\x01\x12\a\n" +
	"\x03gcp\x10\x022\xf2\x02\n" +
	"\aBifrost\x12`\n" +
	"\n" +
	"GetVersion\x12\x1d.bifrost.v1.GetVersionRequest\x1a\x1e.bifrost.v1.GetVersionResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\v/v1/version\x12\x84\x02\n" +
	"\bGetToken\x12\x1b.bifrost.v1.GetTokenRequest\x1a\x1c.bifrost.v1.GetTokenResponse\"\xbc\x01\x92A\xa7\x01r\xa4\x01\n" +
	"\xa1\x01\n" +
	"\x17X-Service-Account-Token\x12\x81\x01A Kubernetes service account token for authentication. This header is converted to the gRPC metadata key 'service-account-token'.\x18\x01(\x01\x82\xd3\xe4\x93\x02\v\x12\t/v1/tokenB:Z8github.com/kubernetes-bifrost/bifrost/grpc/go;bifr√∂stpbb\x06proto3"

var (
	file_bifrost_proto_rawDescOnce sync.Once
	file_bifrost_proto_rawDescData []byte
)

func file_bifrost_proto_rawDescGZIP() []byte {
	file_bifrost_proto_rawDescOnce.Do(func() {
		file_bifrost_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_bifrost_proto_rawDesc), len(file_bifrost_proto_rawDesc)))
	})
	return file_bifrost_proto_rawDescData
}

var file_bifrost_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bifrost_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_bifrost_proto_goTypes = []any{
	(Provider)(0),                  // 0: bifrost.v1.Provider
	(*ContainerRegistryLogin)(nil), // 1: bifrost.v1.ContainerRegistryLogin
	(*GetVersionRequest)(nil),      // 2: bifrost.v1.GetVersionRequest
	(*GetVersionResponse)(nil),     // 3: bifrost.v1.GetVersionResponse
	(*GetTokenRequest)(nil),        // 4: bifrost.v1.GetTokenRequest
	(*GetTokenResponse)(nil),       // 5: bifrost.v1.GetTokenResponse
	(*AWSParams)(nil),              // 6: bifrost.v1.AWSParams
	(*AWSToken)(nil),               // 7: bifrost.v1.AWSToken
	(*AzureParams)(nil),            // 8: bifrost.v1.AzureParams
	(*AzureToken)(nil),             // 9: bifrost.v1.AzureToken
	(*GCPParams)(nil),              // 10: bifrost.v1.GCPParams
	(*GCPToken)(nil),               // 11: bifrost.v1.GCPToken
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
}
var file_bifrost_proto_depIdxs = []int32{
	12, // 0: bifrost.v1.ContainerRegistryLogin.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 1: bifrost.v1.GetTokenRequest.provider:type_name -> bifrost.v1.Provider
	6,  // 2: bifrost.v1.GetTokenRequest.aws:type_name -> bifrost.v1.AWSParams
	8,  // 3: bifrost.v1.GetTokenRequest.azure:type_name -> bifrost.v1.AzureParams
	10, // 4: bifrost.v1.GetTokenRequest.gcp:type_name -> bifrost.v1.GCPParams
	1,  // 5: bifrost.v1.GetTokenResponse.registry_login:type_name -> bifrost.v1.ContainerRegistryLogin
	7,  // 6: bifrost.v1.GetTokenResponse.aws:type_name -> bifrost.v1.AWSToken
	9,  // 7: bifrost.v1.GetTokenResponse.azure:type_name -> bifrost.v1.AzureToken
	11, // 8: bifrost.v1.GetTokenResponse.gcp:type_name -> bifrost.v1.GCPToken
	12, // 9: bifrost.v1.AWSToken.expiration:type_name -> google.protobuf.Timestamp
	12, // 10: bifrost.v1.AzureToken.expires_on:type_name -> google.protobuf.Timestamp
	12, // 11: bifrost.v1.GCPToken.expiry:type_name -> google.protobuf.Timestamp
	2,  // 12: bifrost.v1.Bifrost.GetVersion:input_type -> bifrost.v1.GetVersionRequest
	4,  // 13: bifrost.v1.Bifrost.GetToken:input_type -> bifrost.v1.GetTokenRequest
	3,  // 14: bifrost.v1.Bifrost.GetVersion:output_type -> bifrost.v1.GetVersionResponse
	5,  // 15: bifrost.v1.Bifrost.GetToken:output_type -> bifrost.v1.GetTokenResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_bifrost_proto_init() }
func file_bifrost_proto_init() {
	if File_bifrost_proto != nil {
		return
	}
	file_bifrost_proto_msgTypes[3].OneofWrappers = []any{
		(*GetTokenRequest_Aws)(nil),
		(*GetTokenRequest_Azure)(nil),
		(*GetTokenRequest_Gcp)(nil),
	}
	file_bifrost_proto_msgTypes[4].OneofWrappers = []any{
		(*GetTokenResponse_RegistryLogin)(nil),
		(*GetTokenResponse_Aws)(nil),
		(*GetTokenResponse_Azure)(nil),
		(*GetTokenResponse_Gcp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_bifrost_proto_rawDesc), len(file_bifrost_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bifrost_proto_goTypes,
		DependencyIndexes: file_bifrost_proto_depIdxs,
		EnumInfos:         file_bifrost_proto_enumTypes,
		MessageInfos:      file_bifrost_proto_msgTypes,
	}.Build()
	File_bifrost_proto = out.File
	file_bifrost_proto_goTypes = nil
	file_bifrost_proto_depIdxs = nil
}
